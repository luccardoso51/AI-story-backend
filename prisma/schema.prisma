// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String
  password      String
  createdAt     DateTime       @default(now())
  stories       Story[]
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime
  isValid   Boolean  @default(true)
  updatedAt   DateTime @updatedAt
  

  @@index([userId])
}

model Story {
  id         String   @id @default(uuid())
  title      String
  content    String
  createdAt  DateTime @default(now())
  ageRange   String
  author     String
  userId     String
  characters String[]
  user       User     @relation(fields: [userId], references: [id])
  illustrations Illustration[]
  audio Audio?
  @@index([userId])
}

model Audio {
  id String @id @default(uuid())
  url String
  s3Key String
  storyId String @unique
  story Story @relation(fields: [storyId], references: [id])
}

model Illustration {
  id String @id @default(uuid())
  url String
  type String
  s3Key String
  sequence Int?
  storyId String
  story Story @relation(fields: [storyId], references: [id])
  createdAt DateTime @default(now())

  @@index([storyId])
}